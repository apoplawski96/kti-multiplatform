[versions]
#kotlin = "1.7.20"
#
### SDK Versions
kotlinxSerializationJson = "1.3.3"
#minSdk = "21"
#targetSdk = "33"
#compileSdk = "33"
#
## Dependencies
#android-gradle-plugin = "7.2.2" # Don't bump to 7.3.x until Intellij supports it (unless you're ok with only Android Studio)
#ktlint-gradle = "11.0.0"
#gradle-versions = "0.42.0"
#
#compose = "1.2.1"
#composeCompiler = "1.3.2"
#
#android-desugaring = "1.1.8" # Don't bump to 1.2.x until AGP is 7.3.x
#androidx-core = "1.8.0"
#androidx-test-junit = "1.1.3"
#androidx-activity-compose = "1.5.1"
#androidx-lifecycle = "2.5.1"
#
#junit = "4.13.2"
#
#coroutines = "1.6.4"
#kotlinx-datetime = "0.4.0"
ktor = "2.1.1"
#
#robolectric = "4.8.2"
#
kermit = "1.1.3"
stately = "1.2.3"
#
#accompanist-swiperefresh = "0.25.1"
#koin = "3.2.0"
#multiplatformSettings = "1.0.0-alpha01"
#turbine = "0.12.1"
sqlDelight = "1.5.5"
#
#NEW FUCKING STUFF#
compileSdk = "34"
targetSdk = "34"
minSdk = "26"
accompanistSystemuicontroller = "0.32.0"
activityCompose = "1.8.0"
androidGradlePlugin = "8.1.0"
appcompat = "1.6.1"
calfUi = "0.2.0"
compose-multiplatform = "1.5.10-rc01"
coreKtx = "1.12.0"
imageLoader = "1.6.8"
jtokkit = "0.5.0"
koin = "3.4.2"
kotlin = "1.9.20-RC"
kotlinxDatetime = "0.4.0"
markdown = "0.4.1"
napier = "2.6.1"
openaiClient = "3.5.0"
playServicesAds = "22.4.0"
resources = "0.3.2"
settings = "1.0.0"
uuid = "0.7.0"
voyager = "1.0.0-rc08"
revenuecat = "7.0.1"
kmm-viewmodel = "1.0.0-ALPHA-6"
#sqlDelight = "2.0.0"
moko-resources = "0.23.0"
#ktor = "2.3.5"
kotlinx-serialization = "1.6.0"
#NEW FUCKING STUFF#
[libraries]
#android-desugaring = { module = "com.android.tools:desugar_jdk_libs", version.ref = "android-desugaring" }
#androidx-core = { module = "androidx.core:core-ktx", version.ref = "androidx-core" }
#androidx-lifecycle-runtime = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "androidx-lifecycle" }
#androidx-lifecycle-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "androidx-lifecycle" }
#androidx-test-junit = { module = "androidx.test.ext:junit-ktx", version.ref = "androidx-test-junit" }
#
#compose-compiler = { module = "androidx.compose.compiler:compiler", version.ref = "composeCompiler" }
#compose-ui = { module = "androidx.compose.ui:ui", version.ref = "compose" }
#compose-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
#compose-foundation = { module = "androidx.compose.foundation:foundation", version.ref = "compose" }
#compose-material = { module = "androidx.compose.material:material", version.ref = "compose" }
#compose-activity = { module = "androidx.activity:activity-compose", version.ref = "androidx-activity-compose" }
#
#coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
#coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
#
#google-accompanist-swipeRefresh = { module = "com.google.accompanist:accompanist-swiperefresh", version.ref = "accompanist-swiperefresh" }
#
#junit = { module = "junit:junit", version.ref = "junit" }
#
#koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
#koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
#koin-test = { module = "io.insert-koin:koin-test", version.ref = "koin" }
#
#kotlinx-dateTime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx-datetime" }
#
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerializationJson" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-ios = { module = "io.ktor:ktor-client-ios", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-client-okHttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-serialization = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-contentNegotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-mock = { module = "io.ktor:ktor-client-mock", version.ref = "ktor" }
#
#multiplatformSettings-common = { module = "com.russhwolf:multiplatform-settings", version.ref = "multiplatformSettings" }
#multiplatformSettings-test = { module = "com.russhwolf:multiplatform-settings-test", version.ref = "multiplatformSettings" }
#
#roboelectric = { module = "org.robolectric:robolectric", version.ref = "robolectric" }
#
sqlDelight-android = { module = "com.squareup.sqldelight:android-driver", version.ref = "sqlDelight" }
sqlDelight-jvm = { module = "com.squareup.sqldelight:sqlite-driver", version.ref = "sqlDelight" }
sqlDelight-coroutinesExt = { module = "com.squareup.sqldelight:coroutines-extensions", version.ref = "sqlDelight" }
sqlDelight-native = { module = "com.squareup.sqldelight:native-driver", version.ref = "sqlDelight" }
sqlDelight-runtime = { module = "com.squareup.sqldelight:runtime", version.ref = "sqlDelight" }
#
touchlab-kermit = { module = "co.touchlab:kermit", version.ref = "kermit" }
touchlab-stately = { module = "co.touchlab:stately-common", version.ref = "stately" }
#
#turbine = { module = "app.cash.turbine:turbine", version.ref = "turbine" }
#kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
#androidx-annotation-jvm = { group = "androidx.annotation", name = "annotation-jvm", version = "1.6.0" }
#
#[plugins]
#ktlint = { id = "org.jlleitschuh.gradle.ktlint", version.ref = "ktlint-gradle" }
#gradleVersions = { id = "com.github.ben-manes.versions", version.ref = "gradle-versions" }
#
### NEW FUCKING STUFF ###
accompanist-systemuicontroller = { module = "com.google.accompanist:accompanist-systemuicontroller", version.ref = "accompanistSystemuicontroller" }
activity-compose = { module = "androidx.activity:activity-compose", version.ref = "activityCompose" }
calf-filepicker = { module = "com.mohamedrejeb.calf:calf-file-picker", version.ref = "calfUi" }
calf-ui = { module = "com.mohamedrejeb.calf:calf-ui", version.ref = "calfUi" }
#sqldelight-android-driver = { module = "app.cash.sqldelight:android-driver", version.ref = "sqlDelight" }
appcompat = { module = "androidx.appcompat:appcompat", version.ref = "appcompat" }
core-ktx = { module = "androidx.core:core-ktx", version.ref = "coreKtx" }
coroutines-extensions = { module = "app.cash.sqldelight:coroutines-extensions", version.ref = "sqlDelight" }
moko-resources-generator = { module = "dev.icerock.moko:resources-generator", version.ref = "moko-resources" }
image-loader = { module = "io.github.qdsfdhvh:image-loader", version.ref = "imageLoader" }
jtokkit = { module = "com.knuddels:jtokkit", version.ref = "jtokkit" }
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-workmanager = { module = "io.insert-koin:koin-androidx-workmanager", version.ref = "koin" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinxDatetime" }
markdown = { module = "org.jetbrains:markdown", version.ref = "markdown" }
multiplatform-settings = { module = "com.russhwolf:multiplatform-settings", version.ref = "settings" }
multiplatform-settings-coroutines = { module = "com.russhwolf:multiplatform-settings-coroutines", version.ref = "settings" }
multiplatform-settings-datastore = { module = "com.russhwolf:multiplatform-settings-datastore", version.ref = "settings" }
napier = { module = "io.github.aakira:napier", version.ref = "napier" }
#sqldelight-native-driver = { module = "app.cash.sqldelight:native-driver", version.ref = "sqlDelight" }
openai-client = { module = "com.aallam.openai:openai-client", version.ref = "openaiClient" }
play-services-ads = { module = "com.google.android.gms:play-services-ads", version.ref = "playServicesAds" }
resources = { module = "com.goncalossilva:resources", version.ref = "resources" }
uuid = { module = "com.benasher44:uuid", version.ref = "uuid" }
voyager-navigator = { group = "cafe.adriel.voyager", name = "voyager-navigator", version.ref = "voyager" }
voyager-koin = { group = "cafe.adriel.voyager", name = "voyager-koin", version.ref = "voyager" }
voyager-transitions = { group = "cafe.adriel.voyager", name = "voyager-transitions", version.ref = "voyager" }
revenuecat = { group = "com.revenuecat.purchases", name = "purchases", version.ref = "revenuecat" }
kmm-viewmodel = { group = "com.rickclephas.kmm", name = "kmm-viewmodel-core", version.ref = "kmm-viewmodel" }
ktor-core = { group = "io.ktor", name = "ktor-client-core", version.ref = "ktor" }
ktor-serialization-json = { group = "io.ktor", name = "ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-content-negociation = { group = "io.ktor", name = "ktor-client-content-negotiation", version.ref = "ktor" }
#kotlinx-serialization-json = { group = "org.jetbrains.kotlinx", name = "kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
moko-resources = { group = "dev.icerock.moko", name = "resources", version.ref = "moko-resources" }
moko-resources-compose = { group = "dev.icerock.moko", name = "resources-compose", version.ref = "moko-resources" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
#ktor-client-ios = { module = "io.ktor:ktor-client-ios", version.ref = "ktor" }
play-services-auth = { module = "com.google.android.gms:play-services-auth", version = "20.5.0" }
### NEW FUCKING STUFF ###
[bundles]
#app-ui = [
#    "compose-compiler",
#    "androidx-core",
#    "androidx-lifecycle-runtime",
#    "androidx-lifecycle-viewmodel",
#    "compose-ui",
#    "compose-tooling",
#    "compose-foundation",
#    "compose-material",
#    "compose-activity",
#    "google-accompanist-swipeRefresh"
#]
ktor-common = ["ktor-client-core", "ktor-client-logging", "ktor-client-serialization", "ktor-client-contentNegotiation"]
#shared-commonTest = [
#    "kotlin-test",
#    "multiplatformSettings-test",
#    "koin-test",
#    "turbine",
#    "coroutines-test",
#    "ktor-client-mock"
#]
#shared-androidTest = [
#    "androidx-test-junit",
#    "coroutines-test",
#    "roboelectric",
#    "sqlDelight-jvm"
#]
#

[plugins]
android-application = { id = "com.android.application", version.ref = "androidGradlePlugin" }
android-library = { id = "com.android.library", version.ref = "androidGradlePlugin" }
jetbrains-compose = { id = "org.jetbrains.compose", version.ref = "compose-multiplatform" }
#moko-resources = { id = "dev.icerock.mobile.multiplatform-resources", version.ref = "moko-resources" }
sqldelight = { id = "app.cash.sqldelight", version.ref = "sqlDelight" }
jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
nativecocoapods = { id = "org.jetbrains.kotlin.native.cocoapods", version.ref = "kotlin" }